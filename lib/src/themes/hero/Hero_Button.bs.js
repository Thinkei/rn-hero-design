// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ReactNative from "react-native";
import * as Hero_Variables from "./Hero_Variables.bs.js";

var _WRAPPER_HEIGHT = Hero_Variables._HEADER_4 + Hero_Variables._MEDIUM_SIZE * 2.0;

var _WRAPPER_BORDER_RADIUS = _WRAPPER_HEIGHT * 0.5;

var tmp = {
  fontSize: Hero_Variables._HEADER_4,
  lineHeight: Hero_Variables._HEADER_4
};

if (Hero_Variables._FONT_FAMILY !== undefined) {
  tmp.fontFamily = Caml_option.valFromOption(Hero_Variables._FONT_FAMILY);
}

var styles = {
  wrapper: {
    borderRadius: _WRAPPER_BORDER_RADIUS,
    alignItems: "center",
    display: "flex",
    height: _WRAPPER_HEIGHT,
    justifyContent: "center",
    paddingHorizontal: Hero_Variables._MEDIUM_SIZE
  },
  text: tmp,
  filledWrapper: {
    backgroundColor: Hero_Variables._PRIMARY_COLOR
  },
  filledText: {
    color: Hero_Variables._INVERTED_TEXT_COLOR
  },
  filledLoadingIndicator: {
    color: Hero_Variables._INVERTED_TEXT_COLOR
  },
  outlinedWrapper: {
    backgroundColor: "transparent",
    borderColor: Hero_Variables._PRIMARY_COLOR,
    borderWidth: 1.2
  },
  outlinedText: {
    color: Hero_Variables._PRIMARY_COLOR,
    fontWeight: "500"
  },
  outlinedLoadingIndicator: {
    color: Hero_Variables._PRIMARY_COLOR
  },
  disabledWrapper: {
    backgroundColor: Hero_Variables._DISABLED_BACKGROUND_COLOR,
    borderWidth: 0.0
  },
  disabledText: {
    color: Hero_Variables._INVERTED_TEXT_COLOR
  }
};

var $$default = ReactNative.StyleSheet.create(styles);

var _TEXT_FONT_SIZE = Hero_Variables._HEADER_4;

var _WRAPPER_PADDING_VERTICAL = Hero_Variables._MEDIUM_SIZE;

var _WRAPPER_PADDING_HORIZONTAL = Hero_Variables._MEDIUM_SIZE;

var _FILLED_TEXT_COLOR = Hero_Variables._INVERTED_TEXT_COLOR;

var _FILLED_BACKGROUND_COLOR = Hero_Variables._PRIMARY_COLOR;

var _OUTLINED_TEXT_COLOR = Hero_Variables._PRIMARY_COLOR;

var _OUTLINED_BORDER_COLOR = Hero_Variables._PRIMARY_COLOR;

var _DISABLED_TEXT_COLOR = Hero_Variables._INVERTED_TEXT_COLOR;

var _DISABLED_BACKGROUND_COLOR = Hero_Variables._DISABLED_BACKGROUND_COLOR;

export {
  _TEXT_FONT_SIZE ,
  _WRAPPER_PADDING_VERTICAL ,
  _WRAPPER_PADDING_HORIZONTAL ,
  _WRAPPER_HEIGHT ,
  _WRAPPER_BORDER_RADIUS ,
  _FILLED_TEXT_COLOR ,
  _FILLED_BACKGROUND_COLOR ,
  _OUTLINED_TEXT_COLOR ,
  _OUTLINED_BORDER_COLOR ,
  _DISABLED_TEXT_COLOR ,
  _DISABLED_BACKGROUND_COLOR ,
  styles ,
  $$default ,
  $$default as default,
  
}
/* default Not a pure module */
